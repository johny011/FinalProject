<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="hospitallDataSet48" targetNamespace="http://tempuri.org/hospitallDataSet48.xsd" xmlns:mstns="http://tempuri.org/hospitallDataSet48.xsd" xmlns="http://tempuri.org/hospitallDataSet48.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="hospitallConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="hospitallConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Final_project.Properties.Settings.GlobalReference.Default.hospitallConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="picturesTableAdapter" GeneratorDataComponentClassName="picturesTableAdapter" Name="pictures" UserDataComponentName="picturesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hospitallConnectionString (Settings)" DbObjectName="hospitall.dbo.pictures" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[pictures] WHERE (([picturesid] = @Original_picturesid) AND ([picturesname] = @Original_picturesname) AND ([price] = @Original_price) AND ([processing] = @Original_processing))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_picturesid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="picturesid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_picturesname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="picturesname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_processing" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="processing" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[pictures] ([picturesname], [price], [processing]) VALUES (@picturesname, @price, @processing);
SELECT picturesid, picturesname, price, processing FROM pictures WHERE (picturesid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@picturesname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="picturesname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@processing" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="processing" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT picturesid, picturesname, price, processing FROM dbo.pictures</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[pictures] SET [picturesname] = @picturesname, [price] = @price, [processing] = @processing WHERE (([picturesid] = @Original_picturesid) AND ([picturesname] = @Original_picturesname) AND ([price] = @Original_price) AND ([processing] = @Original_processing));
SELECT picturesid, picturesname, price, processing FROM pictures WHERE (picturesid = @picturesid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@picturesname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="picturesname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@processing" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="processing" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_picturesid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="picturesid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_picturesname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="picturesname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_processing" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="processing" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="picturesid" ColumnName="picturesid" DataSourceName="hospitall.dbo.pictures" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@picturesid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="picturesid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="picturesid" DataSetColumn="picturesid" />
              <Mapping SourceColumn="picturesname" DataSetColumn="picturesname" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="processing" DataSetColumn="processing" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="hospitallDataSet48" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="hospitallDataSet48" msprop:Generator_UserDSName="hospitallDataSet48">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="pictures" msprop:Generator_TableClassName="picturesDataTable" msprop:Generator_TableVarName="tablepictures" msprop:Generator_TablePropName="pictures" msprop:Generator_RowDeletingName="picturesRowDeleting" msprop:Generator_RowChangingName="picturesRowChanging" msprop:Generator_RowEvHandlerName="picturesRowChangeEventHandler" msprop:Generator_RowDeletedName="picturesRowDeleted" msprop:Generator_UserTableName="pictures" msprop:Generator_RowChangedName="picturesRowChanged" msprop:Generator_RowEvArgName="picturesRowChangeEvent" msprop:Generator_RowClassName="picturesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="picturesid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnpicturesid" msprop:Generator_ColumnPropNameInRow="picturesid" msprop:Generator_ColumnPropNameInTable="picturesidColumn" msprop:Generator_UserColumnName="picturesid" type="xs:int" />
              <xs:element name="picturesname" msprop:Generator_ColumnVarNameInTable="columnpicturesname" msprop:Generator_ColumnPropNameInRow="picturesname" msprop:Generator_ColumnPropNameInTable="picturesnameColumn" msprop:Generator_UserColumnName="picturesname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" />
              <xs:element name="processing" msprop:Generator_ColumnVarNameInTable="columnprocessing" msprop:Generator_ColumnPropNameInRow="processing" msprop:Generator_ColumnPropNameInTable="processingColumn" msprop:Generator_UserColumnName="processing">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:pictures" />
      <xs:field xpath="mstns:picturesid" />
    </xs:unique>
  </xs:element>
</xs:schema>